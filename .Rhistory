j = strtoi(Medida_cesio_plomo_4$Medidas)
j = log(j)
k = strtoi(Medida_rad$Medidas)
k = log(k)
l = strtoi(Medida_sodio$Medidas)
l = log(l)
plot(a,type='l')
plot(b,type='l')
plot(c,type='l')
plot(d,type='l')
plot(e,type='l')
plot(f,type='l')
plot(g,type='l')
plot(h,type='l')
plot(i,type='l')
plot(j,type='l')
plot(k,type='l')
plot(l,type='l')
A = b-a
plot(A, type = 'l')
C = d-a
plot(C, type = 'l')
plot(A,type = 'l')
plot(d, type = 'l')
plot(l, type='l')
plot(k,type='l')
plot(b,type='l')
plot(A,type='l')
plot(Medida_cesio)
plot(Medida_cesio, type='l')
plot(Medida_cesio-Fondo, type='l')
Fondo-1
Medida_cesio-1
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas))
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l')
plot(Fondo,type = 'l')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l')
plot(log(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)), type = 'l')
plot(Fondo, type = 'l', xlab = 'Altura del Pulso',ylab = 'Cuentas por canal', main = 'Espectro del Fondo')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',lab = 'Altura del Pulso',ylab = 'Cuentas por canal', main = 'Espectro del Cesio 137')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',lab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
plot(log(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
plot(log(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137',xlim = c(0,200))
plot(log(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
par(mfrow=c(2,2))
plot(log(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio 137')
par(mfrow = c(2,2))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 1')
plot(strtoi(Medida_cesio_aluminio_2$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 2')
plot(strtoi(Medida_cesio_aluminio_3$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 3')
plot(strtoi(Medida_cesio_aluminio_4$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 4')
plot(log(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 1')
plot(log(strtoi(Medida_cesio_aluminio_2$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 2')
plot(log(strtoi(Medida_cesio_aluminio_3$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 3')
plot(log(strtoi(Medida_cesio_aluminio_4$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+aluminio, medida 4')
plot(strtoi(Medida_cesio_plomo_1$Medidas-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del cesio+plomo, medida 1')
)
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 1')
plot(strtoi(Medida_cesio_plomo_2$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 2')
plot(strtoi(Medida_cesio_plomo_3$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 3')
plot(strtoi(Medida_cesio_plomo_4$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 4')
plot(log(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 1')
plot(strtoi(Medida_cesio_plomo_2$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 2')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 1')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 1')
plot(log(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 1',xlim = c(0,200))
plot(log(strtoi(Medida_cesio_plomo_2$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 2',xlim = c(0,200))
plot(log(strtoi(Medida_cesio_plomo_3$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 3',xlim = c(0,200))
plot(log(strtoi(Medida_cesio_plomo_4$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del Cesio+plomo, medida 4',xlim = c(0,200))
plot(strtoi(Medida_rad$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del radio')
plot(strtoi(Medida_sodio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del radio')
plot(log(strtoi(Medida_rad$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del radio')
plot(log(strtoi(Medida_rad$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del sodio')
plot(log(strtoi(Medida_sodio$Medidas)-strtoi(Fondo$Medidas)), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del sodio')
plot(strtoi(Medida_sodio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlab = 'Altura del Pulso',ylab = 'C/canal', main = 'Espectro del sodio')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l')
plot((strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas))c(100:200), type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(100:200)]-strtoi(Fondo$Medidas)[c(100:200)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(125:175)]-strtoi(Fondo$Medidas)[c(100:200)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(125:175)]-strtoi(Fondo$Medidas)[c(125:175)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(140:175)]-strtoi(Fondo$Medidas)[c(125:175)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(140:175)]-strtoi(Fondo$Medidas)[c(140:175)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)], type = 'l')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlim = c(135,175))
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x<- seq(135,175, length = 1000)
y = dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)),sd = 3)
curve(x,y,col = 'red')
curve(y,col = 'red')
curve(dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)),sd = 3), x=x, col = 'red')
curve(dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)), sd = sd(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas))),
add = TRUE, type = 'l', col = 'red', lwd = 3)
curve(dnorm(x, mean = 15, sd = 7),
+       add = TRUE, type = 'l', col = 'red', lwd = 3)
curve(dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)[c(135:175]-strtoi(Fondo$Medidas)[c(135:175)]), sd = sd(strtoi(Medida_cesio$Medidas)[c(135:175)-strtoi(Fondo$Medidas)[c(135:175)]))
curve(dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)]), sd = sd(strtoi(Medida_cesio$Medidas)[c(135:175)-strtoi(Fondo$Medidas)[c(135:175)]))
curve(dnorm(x, mean = mean(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)]), sd = sd(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)]))
)
curve(dnorm(x, mean = 10, sd = 3),
add = TRUE, type = 'l', col = 'red', lwd = 3)
curve(dnorm(x, mean = 100, sd = 30),
add = TRUE, type = 'l', col = 'red', lwd = 3)
curve(dnorm(x, mean = 1000, sd = 100),
add = TRUE, type = 'l', col = 'red', lwd = 3)
curve(dnorm(x, mean =15000, sd = 1200),
add = TRUE, type = 'l', col = 'red', lwd = 3)
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
curve(gaussian.fit(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas)))
fitG =
function(x,y,mu,sig,scale){
f = function(p){
d = p[3]*dnorm(x,mean=p[1],sd=p[2])
sum((d-y)^2)
}
optim(c(mu,sig,scale),f)
}
fit = fitG(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)],6,0.6,.02)
fit = fitG(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)],c(135:175),6,0.6,.02)
fit = fitG(c(135:175),strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)],6,0.6,.02)
View(fit)
fit$par
p = fit$par
lines(c(135:175),p[3]*dnorm(c(135:175),p[1],p[2]))
max(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175))
max(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)])
which.max(strtoi(Medida_cesio$Medidas)[c(135:175)]-strtoi(Fondo$Medidas)[c(135:175)])
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
lines(c(135:175),5*exp(-3), col = 'red')
lines(c(135:175),5*exp(-3*x), col = 'red')
x = c(135:175)
lines(x,5*exp(-3*x), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,200*exp(-3*x), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,200000*exp(-3*x), col = 'red')
lines(x,200000*exp(-0.2*x), col = 'red')
plot(x,5*exp(-3*x))
plot(x,2000*exp(-3*x))
plot(x,5*exp(-0.02*x))
plot(x,5*exp(-0.0001*x))
plot(x,5*exp(-0.000000008*x))
plot(x,15*exp(-0.0005*x))
plot(x,5*exp(-0.0005*x)+135)
plot(5*exp(-0.03*c(0:100)))
plot(5*exp(-0.03*c(0:100))+50)
plot(5*exp(-0.03*c(0:100)+50))
plot(100*exp(-0.03*c(0:100)))
plot(100*exp(-(*c(0:100)-50)^2)
plot(5*exp(-(c(0:100)-50)^2)
)
plot(1000*exp(-(x-20)^2/(2*1.2^2)))
plot(1000*exp(-(x-20)^2/(2*0.2^2)))
plot(1000*exp(-(x-155)^2/(2*0.5)))
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,800*exp(-(x-155)^2/(2*0.5)), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,900*exp(-(x-155)^2/(2*1.5)), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,900*exp(-(x-155)^2/(2*15)), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,900*exp(-(x-155)^2/(2*30)), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
lines(x,900*exp(-(x-155)^2/(2*35)), col = 'red')
plot(strtoi(Medida_cesio$Medidas)-strtoi(Fondo$Medidas), type = 'l',
xlim = c(135,175), xlab = 'Altura del Pulso', ylab = 'cuentas/canal', main = 'Fotopico del Cesio 137')
x = c(135:175)
a = log(a)
lines(x,900*exp(-(x-155)^2/(2*50)), col = 'red')
which.max(900*exp(-(x-155)^2/(2*50)))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas), type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal')
lines(strtoi(Medida_cesio_aluminio_2$Medidas)-strtoi(Fondo$Medidas),col = 'red')
lines(strtoi(Medida_cesio_aluminio_3$Medidas)-strtoi(Fondo$Medidas),col = 'green')
lines(strtoi(Medida_cesio_aluminio_3$Medidas)-strtoi(Fondo$Medidas),col = 'blue')
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = 20)
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,20)
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,20))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,50))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,100))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,20))
which.max(strtoi(Medida_cesio_aluminio_1$Medidas)[c(0:20)]-strtoi(Fondo$Medidas)[c(0:20)])
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(25,50))
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(25,100))
which.max(strtoi(Medida_cesio_aluminio_1$Medidas)[c(25:100)]-strtoi(Fondo$Medidas)[c(25:100)])
plot(strtoi(Medida_cesio_aluminio_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(100,200))
which.max(strtoi(Medida_cesio_aluminio_1$Medidas)[c(100:200)]-strtoi(Fondo$Medidas)[c(100:200)])
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal')
lines(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas), col = 'red')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal')
lines(strtoi(Medida_cesio_plomo_2$Medidas)-strtoi(Fondo$Medidas), col = 'red')
lines(strtoi(Medida_cesio_plomo_3$Medidas)-strtoi(Fondo$Medidas), col = 'green')
lines(strtoi(Medida_cesio_plomo_4$Medidas)-strtoi(Fondo$Medidas), col = 'blue')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,25))
which.max(strtoi(Medida_cesio_plomo_1$Medidas)[c(0:25)]-strtoi(Fondo$Medidas)[c(0:25)])
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(25,50))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(25,80))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(0,25))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(25,80))
which.max(strtoi(Medida_cesio_plomo_1$Medidas)[c(25:80)]-strtoi(Fondo$Medidas)[c(25:80)])
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal')
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(100,200))
which.max(strtoi(Medida_cesio_plomo_1$Medidas)[c(100:200)]-strtoi(Fondo$Medidas)[c(100:200)])
plot(strtoi(Medida_rad$Medidas)-strtoi(Fondo$Medidas))
plot(c(18,58,156))
plot(log(c(18,58,156)))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(100,200))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(140,170))
plot(log(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas)),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(140,170))
plot(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(140,170))
plot(log(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas)),
type = 'l', xlab = 'Altura del Pulso', ylab = 'cuentas/canal',xlim = c(156,170))
hist(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas)
)
hist(strtoi(Medida_cesio_plomo_1$Medidas)-strtoi(Fondo$Medidas), freq = FALSE)
library(tmap)
library(sp)
library(readr)
library(dplyr)
mapa <- readRDS("C:/Users/adrgo/Downloads/TFM/Data/gadm36_ESP_3_sp.rds")
mapa <- readRDS("C:/Users/adrgo/Downloads/TFM/Data/gadm36_ESP_2_sp.rds")
data <- read_csv("C:/Users/adrgo/Downloads/TFM/Resultados/Resultados elecciones generales municipios.csv")
plot(mapa)
mapa = mapa[mapa$NAME_2 == c('Almería','Cádiz','Córdoba','Granada','Huelva','Jaén','Málaga','Sevilla')]
mapa <- readRDS("C:/Users/adrgo/Downloads/TFM/Data/gadm36_ESP_2_sp.rds")
mapa = mapa[mapa$NAME_2 == c('Almería','Cádiz','Córdoba','Granada','Huelva','Jaén','Málaga','Sevilla'),]
plot(mapa)
names(mapa)
library(tmap)
library(sp)
library(readr)
library(dplyr)
mapa <- readRDS("D:/Di_Pal/Novela/Tema R/gadm36_EST_3_sf.rds")
data <- read_csv("C:/Users/adrgo/Downloads/NoV/Elecciones1963.csv")
mapa1 <- readRDS("D:/Di_Pal/Novela/Tema R/gadm36_EST_2_sf.rds")
data1 <- read_csv("C:/Users/adrgo/Downloads/NoV/Elecciones1966Provincias.csv")
mapa1 = mapa1[mapa1$NAME_1 != "Ida-Viru",]
mapa1 = mapa1[mapa1$NAME_1 != "Valga",]
mapa1 = mapa1[mapa1$NAME_1 != "Põlva",]
mapa1 = mapa1[mapa1$NAME_1 != "Tartu",]
mapa1 = mapa1[mapa1$NAME_1 != "Jõgeva",]
mapa1 = mapa1[mapa1$NAME_1 != "Lääne",]
mapa1 = mapa1[mapa1$NAME_1 != "Võru",]
mapa1 = mapa1[mapa1$NAME_1 != "Peipsi",]
mapa1 = mapa1[mapa1$NAME_1 != "Lääne-Viru",]
mapa1 = mapa1[mapa1$NAME_1 != "Viljandi",]
mapa1 = mapa1[mapa1$NAME_1 != "Järva",]
mapa1 = mapa1[mapa1$NAME_1 != "Harju",]
mapa1 = mapa1[mapa1$NAME_1 != "Saare",]
names(mapa1)[7] <- "Provincia Estonia"
mapadata1 = merge(mapa1,data1, by = 'Provincia Estonia')
tm_shape(mapadata1[mapadata1$Winner == 'P.N.R.',]) +
tm_polygons(col='P.N.R.', title = "P.N.R.", palette = "Blues", style = 'cont',
breaks = c(20,30,40,50,60,70,100))+
tm_shape(mapadata1[mapadata1$Winner == 'P.C.-P.A.',]) +
tm_polygons(col='P.C.-P.A.', title = "P.C.-P.A.", palette = "Purples", style = 'cont',
breaks = c(20,30,40,50,60,70,100))+
tm_shape(mapadata1[mapadata1$Winner == 'F.N.P.',]) +
tm_polygons(col='F.N.P.', title = "P.C.-P.A.", palette = "Reds", style = 'cont',
breaks = c(20,30,40,50,60,70,100))+
tm_shape(mapadata1[mapadata1$Winner == 'P.D.A.',]) +
tm_polygons(col='P.D.A.', title = "P.C.-P.A.", palette = "RdPu", style = 'cont',
breaks = c(20,30,40,50,60,70,100))+
tm_legend(show = FALSE)
library(tmap)
library(sp)
library(readr)
library(dplyr)
mapa <- readRDS("Data/gadm36_ESP_2_sp.rds")
data <- read_csv("Resultados/Resultado_provincias.csv")
getwd(C:/Users/adrgo/Downloads/TFM)
getwd('C:\Users\adrgo\Downloads\TFM')
getwd('C:/Users/adrgo/Downloads/TFM')
setwd(C:/Users/adrgo/Downloads/TFM)
setwd('C:/Users/adrgo/Downloads/TFM')
library(tmap)
library(sp)
library(readr)
library(dplyr)
mapa <- readRDS("Data/gadm36_ESP_2_sp.rds")
data <- read_csv("Resultados/Resultado_provincias_Generales.csv")
data$Winner <- ifelse(data$Diferencia > 0, 'Izquierda','Derecha')
mapa = mapa[mapa$NAME_2 == c('Almería','Cádiz','Córdoba','Granada','Huelva','Jaén','Málaga','Sevilla'),]
names(mapa)[7] <- 'Provincia'
mapadata <- merge(mapa,data, by = 'Provincia', duplicateGeoms = TRUE)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha.", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1500, height = 1200,
dpi = 350, delay=100)
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha.", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_raster(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_raster(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata) +
tm_fill(mapadata[mapadata$Winner == 'Izquierda',])+
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_fill(mapadata[mapadata$Winner == 'Derecha',])+
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata) +
tm_fill(col = mapadata[mapadata$Winner == 'Izquierda',], palette = 'Reds', style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_fill(mapadata[mapadata$Winner == 'Derecha',], palette = 'Blues', style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección")+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata) +
tm_fill(col = mapadata[mapadata$Winner == 'Izquierda',], palette = 'Reds', style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_fill(mapadata[mapadata$Winner == 'Derecha',], palette = 'Blues', style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mapa <- readRDS("Data/gadm36_ESP_2_sp.rds")
data <- read_csv("Resultados/Resultado_provincias_Generales.csv")
data$Winner <- ifelse(data$Diferencia > 0, 'Izquierda','Derecha')
mapa = mapa[mapa$NAME_2 == c('Almería','Cádiz','Córdoba','Granada','Huelva','Jaén','Málaga','Sevilla'),]
names(mapa)[7] <- 'Provincia'
mapadata <- merge(mapa,data, by = 'Provincia', duplicateGeoms = TRUE)
mp <- tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
View(mapadata)
View(data)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias_Generales.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mapa <- readRDS("Data/gadm36_ESP_2_sp.rds")
data <- read_csv("Resultados/Resultado_provincias.csv")
data$Winner <- ifelse(data$Diferencia > 0, 'Izquierda','Derecha')
mapa = mapa[mapa$NAME_2 == c('Almería','Cádiz','Córdoba','Granada','Huelva','Jaén','Málaga','Sevilla'),]
names(mapa)[7] <- 'Provincia'
mapadata <- merge(mapa,data, by = 'Provincia', duplicateGeoms = TRUE)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", free.coords  = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", free.coords  = TRUE, as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
mp <- tm_shape(mapadata[mapadata$Winner == 'Derecha',]) +
tm_polygons(col='Derecha', title = "Derecha", palette = "Blues", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_shape(mapadata[mapadata$Winner == 'Izquierda',]) +
tm_polygons(col='Izquierda', title = "Izquierda", palette = "Reds", style = 'cont',
breaks = c(30,40,50,60,70,80,100))+
tm_facets(along = "Elección", as.layers = TRUE)+
tm_layout(legend.outside = TRUE)+
tm_borders()
animation_tmap(mp, filename="Mapas/Mapa_provincias.gif", width = 1600, height = 1300,
dpi = 350, delay=100)
